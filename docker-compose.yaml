version: "3.3"

services:
  redis:
    expose:
      - "6379"
    image: redis:alpine
    volumes:
      - redis:/data
  postgres:
    expose:
      - "5432"
    build:
      context: .
      dockerfile: ./postgres/Dockerfile
    environment:
      POSTGRES_USER: go
      POSTGRES_PASSWORD: password
      POSTGRES_DB: cyntra_local
    volumes:
      - pg-db:/var/lib/postgresql/data
  postgres-pooler:
    expose:
      - "5432"
    ports:
      - 5433:5432
    image: edoburu/pgbouncer
    environment:
      DB_USER: go
      DB_PASSWORD: password
      DB_HOST: postgres
      DB_NAME: cyntra_local
      POOL_MODE: transaction
      DEFAULT_POOL_SIZE: 15
      MIN_POOL_SIZE: 7
      RESERVE_POOL_SIZE: 7
      MAX_CLIENT_CONN: 10000
      MAX_DB_CONNECTIONS: 30
    depends_on:
      - postgres
  etcd:
    image: quay.io/coreos/etcd:v3.5.2
    entrypoint: /usr/local/bin/etcd
    ports:
      - 2379
    command:
      - '--name=etcd'
      - '--advertise-client-urls=http://etcd:2379,http://etcd:4001'
      - '--listen-client-urls=http://0.0.0.0:2379,http://0.0.0.0:4001'
      - '--initial-advertise-peer-urls=http://etcd:2380' 
      - '--listen-peer-urls=http://0.0.0.0:2380' 
      - '--initial-cluster-token=etcd-cluster-1' 
      - '--initial-cluster=etcd=http://etcd:2380'
      - '--initial-cluster-state=new'
    volumes:
      - etcd:/etcd_data
  user-svc:
    ports:
      - 8080:8080
    deploy:
      resources:
        limits:
          cpus: 2
          memory: 8G
        reservations:
          cpus: 1
          memory: 4G
    build:
      context: .
      dockerfile: ./user/rpc/Dockerfile
    environment:
      JWT_SECRET: topsecret
      JWT_EXPIRY_SECONDS: 900
      JWT_REFRESH_EXPIRY_SECONDS: 604800
      REDIS_URL: redis://redis:6379/0
      REDIS_HOST: redis:6379
      ETCD_HOST: etcd:2379
      POSTGRES_URL: postgres://go:password@postgres-pooler:5432/cyntra_local?sslmode=disable
    depends_on:
      - redis
      - postgres-pooler
      - etcd

volumes:
     pg-db: 
     etcd:
     redis:

# To run etcd locally without docker-compose
# docker run -d -v /usr/share/ca-certificates/:/etc/ssl/certs -p 4001:4001 -p 2380:2380 -p 2379:2379 \
#  --name etcd quay.io/coreos/etcd:v3.5.2 \
#  /usr/local/bin/etcd \
#  --name=etcd0 \
#  --advertise-client-urls http://127.0.0.1:2379,http://127.0.0.1:4001 \
#  --listen-client-urls http://0.0.0.0:2379,http://0.0.0.0:4001 \
#  --initial-advertise-peer-urls http://127.0.0.1:2380 \
#  --listen-peer-urls http://0.0.0.0:2380 \
#  --initial-cluster-token etcd-cluster-1 \
#  --initial-cluster etcd0=http://127.0.0.1:2380 \
#  --initial-cluster-state new