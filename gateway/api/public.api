type (
	registerReq {
		Username   string `json:"username"`
		First_name string `json:"first_name"`
		Last_name  string `json:"last_name"`
		Password   string `json:"password"`
		Gender     string `json:"gender"`
		Dob        string `json:"dob"`
	}

	registerResp {
		Id         string `json:"id"`
		Username   string `json:"username"`
		First_name string `json:"first_name"`
		Last_name  string `json:"last_name"`
		Gender     string `json:"gender"`
		Dob        string `json:"dob"`
	}

	loginReq {
		Username string `json:"username"`
		Password string `json:"password"`
	}

	loginResp {
		AccessToken  string `json:"access_token"`
		RefreshToken string `json:"refresh_token"`
	}

	updateUserReq {
		Id         string  `path:"id"`
		Username   *string `json:"username"`
		First_name *string `json:"first_name"`
		Last_name  *string `json:"last_name"`
		Password   *string `json:"password"`
		Gender     *string `json:"gender"`
		Dob        *string `json:"dob"`
	}

	GetUserReq {
		Id string `path:"id"`
	}

	RefreshReq {
		RefreshToken string `json:"refresh_token"`
	}
)

service public-api {
	@server(
		handler: RegisterHandler
	)
	post /register(registerReq) returns(registerReq)
	
	@server(
		handler: LoginHandler
	)
	post /login(loginReq) returns(loginResp)
	
	@server(
		handler: RefreshHandler
	)
	post /refresh(registerReq) returns(registerReq)
	
	@server(
		handler: UpdateUserHandler
	)
	patch /user/:id(updateUserReq) returns(registerResp)
	
	@server(
		handler: GetUserHandler
	)
	get /user/:id(GetUserReq) returns(registerResp)
}